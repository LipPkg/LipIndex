openapi: "3.0.0"
info:
  title: bedrinth-api
  version: "0.3"
security: []
paths:
  /packages:
    get:
      summary: Search packages
      security: []
      parameters:
        - name: q
          in: query
          required: false
          schema:
            type: string
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - hotness
              - updated
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  data:
                    type: object
                    properties:
                      pageIndex:
                        type: integer
                      totalPages:
                        type: integer
                      items:
                        type: array
                        items:
                          "$ref": "#/components/schemas/PackageInfo"
                    required:
                      - pageIndex
                      - totalPages
                      - items
                required:
                  - apiVersion
                  - data
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  /packages/{source}/{identifier}:
    get:
      summary: Get a package
      security: []
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
            enum:
              - github
              - pypi
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/PackageInfo"
                  - type: object
                    properties:
                      projectUrl:
                        type: string
                      contributors:
                        type: array
                        items:
                          type: object
                          properties:
                            username:
                              type: string
                            contributions:
                              type: number
                          required:
                            - username
                            - contributions
                      versions:
                        type: array
                        items:
                          type: object
                          properties:
                            version:
                              type: string
                            releasedAt:
                              type: string
                            source:
                              type: string
                              enum:
                                - github
                                - pypi
                            packageManager:
                              type: string
                              enum:
                                - lip
                                - pip
                              nullable: true
                          required:
                            - version
                            - releasedAt
                            - source
                            - packageManager
                    required:
                      - projectUrl
                      - contributors
                      - versions
                required:
                  - apiVersion
                  - data
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        apiVersion:
          type: string
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
          required:
            - code
            - message
      required:
        - error
        - apiVersion
    PackageInfo:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        description:
          type: string
        author:
          type: string
        tags:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
          nullable: true
        hotness:
          type: number
        updated:
          type: string
      required:
        - identifier
        - name
        - description
        - author
        - tags
        - avatarUrl
        - hotness
        - updated
